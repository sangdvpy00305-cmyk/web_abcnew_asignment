package com.abcnews.servlet;

import com.abcnews.dao.NewsletterDAO;
import com.abcnews.utils.EmailService;
import com.abcnews.model.Newsletter;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.util.List;

@WebServlet("/admin/newsletters/send")
public class AdminNewsletterSendServlet extends HttpServlet {
    
    private NewsletterDAO newsletterDAO;
    
    @Override
    public void init() throws ServletException {
        newsletterDAO = new NewsletterDAO();
    }
    
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        // Ki·ªÉm tra quy·ªÅn admin
        HttpSession session = request.getSession();
        String role = (String) session.getAttribute("role");
        
        if (!"admin".equals(role)) {
            response.sendRedirect(request.getContextPath() + "/login");
            return;
        }
        
        try {
            // L·∫•y th·ªëng k√™ subscribers
            int totalSubscribers = newsletterDAO.getTotalSubscribers();
            int activeSubscribers = newsletterDAO.getActiveSubscribers();
            
            request.setAttribute("totalSubscribers", totalSubscribers);
            request.setAttribute("activeSubscribers", activeSubscribers);
            
            // Hi·ªÉn th·ªã trang g·ª≠i newsletter
            request.getRequestDispatcher("/views/admin/newsletter-send-simple.jsp").forward(request, response);
            
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "L·ªói h·ªá th·ªëng: " + e.getMessage());
            request.getRequestDispatcher("/views/admin/newsletter-send-simple.jsp").forward(request, response);
        }
    }
    
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        // Ki·ªÉm tra quy·ªÅn admin
        HttpSession session = request.getSession();
        String role = (String) session.getAttribute("role");
        
        if (!"admin".equals(role)) {
            response.sendRedirect(request.getContextPath() + "/login");
            return;
        }
        
        // L·∫•y d·ªØ li·ªáu t·ª´ form
        String subject = request.getParameter("subject");
        String content = request.getParameter("content");
        String sendToAll = request.getParameter("sendToAll");
        String customEmails = request.getParameter("customEmails");
        
        // Validate input
        if (subject == null || subject.trim().isEmpty()) {
            request.setAttribute("error", "Vui l√≤ng nh·∫≠p ti√™u ƒë·ªÅ email!");
            doGet(request, response);
            return;
        }
        
        if (content == null || content.trim().isEmpty()) {
            request.setAttribute("error", "Vui l√≤ng nh·∫≠p n·ªôi dung email!");
            doGet(request, response);
            return;
        }
        
        try {
            int successCount = 0;
            int failCount = 0;
            List<Newsletter> recipients;
            
            if ("1".equals(sendToAll)) {
                // G·ª≠i ƒë·∫øn t·∫•t c·∫£ subscribers ho·∫°t ƒë·ªông
                recipients = newsletterDAO.getActiveNewsletters();
                
                for (Newsletter newsletter : recipients) {
                    boolean sent = EmailService.sendNewsletterEmail(
                        newsletter.getEmail(), 
                        subject.trim(), 
                        content.trim()
                    );
                    
                    if (sent) {
                        successCount++;
                        System.out.println("‚úÖ ƒê√£ g·ª≠i newsletter ƒë·∫øn: " + newsletter.getEmail());
                    } else {
                        failCount++;
                        System.err.println("‚ùå L·ªói g·ª≠i newsletter ƒë·∫øn: " + newsletter.getEmail());
                    }
                    
                    // T·∫°m d·ª´ng ng·∫Øn ƒë·ªÉ tr√°nh spam
                    Thread.sleep(100);
                }
                
            } else if (customEmails != null && !customEmails.trim().isEmpty()) {
                // G·ª≠i ƒë·∫øn danh s√°ch email t√πy ch·ªânh
                String[] emails = customEmails.trim().split("\\n");
                
                for (String email : emails) {
                    email = email.trim();
                    if (email.isEmpty() || !isValidEmail(email)) {
                        continue;
                    }
                    
                    boolean sent = EmailService.sendNewsletterEmail(email, subject.trim(), content.trim());
                    
                    if (sent) {
                        successCount++;
                        System.out.println("‚úÖ ƒê√£ g·ª≠i newsletter ƒë·∫øn: " + email);
                    } else {
                        failCount++;
                        System.err.println("‚ùå L·ªói g·ª≠i newsletter ƒë·∫øn: " + email);
                    }
                    
                    // T·∫°m d·ª´ng ng·∫Øn ƒë·ªÉ tr√°nh spam
                    Thread.sleep(100);
                }
            } else {
                request.setAttribute("error", "Vui l√≤ng ch·ªçn ng∆∞·ªùi nh·∫≠n!");\n                doGet(request, response);
                return;
            }
            
            // Hi·ªÉn th·ªã k·∫øt qu·∫£
            String message = String.format(
                "üéâ Ho√†n th√†nh g·ª≠i newsletter!\\n" +
                "‚úÖ Th√†nh c√¥ng: %d email\\n" +
                "‚ùå Th·∫•t b·∫°i: %d email\\n" +
                "üìß Ti√™u ƒë·ªÅ: %s", 
                successCount, failCount, subject
            );
            
            request.setAttribute("message", message);
            
            // Log k·∫øt qu·∫£
            System.out.println("=== K·∫æT QU·∫¢ G·ª¨I NEWSLETTER ===");
            System.out.println("Ti√™u ƒë·ªÅ: " + subject);
            System.out.println("Th√†nh c√¥ng: " + successCount);
            System.out.println("Th·∫•t b·∫°i: " + failCount);
            System.out.println("T·ªïng c·ªông: " + (successCount + failCount));
            System.out.println("=============================");
            
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "L·ªói g·ª≠i newsletter: " + e.getMessage());
        }
        
        // Quay l·∫°i trang g·ª≠i newsletter
        doGet(request, response);
    }
    
    /**
     * Ki·ªÉm tra email h·ª£p l·ªá
     */
    private boolean isValidEmail(String email) {
        return email != null && email.matches("^[A-Za-z0-9+_.-]+@(.+)$");
    }
}